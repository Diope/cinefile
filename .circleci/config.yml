version: 2.1

jobs:
  install_dependencies:
    docker:
      - image: circleci/node:16.5
    working_directory: ~/project
    steps:
      - checkout
      - run:
          name: Show curernt branch
          command: echo ${CURRENT_BRANCH}
      - restore_cache:
          keys:
            - app-{{ checksum "package.json" }} # Hurrahz for random twitter people
            - app-
      - run:
          name: Install depdencies
          command: npm install
      - save_cache:
          paths:
            - node_modules
          key: app-{{ checksum "package.json" }}

  deploy_to_aws_s3:
    docker:
      - image: circleci/node:16.5
    working_directory: ~/project
    steps:
      - checkout
      - run:
          name: Show current branch
          command: echo ${CURRENT_BRANCH}
      - run:
          name: Install AWS CLI
          working_directory: /
          command: |
            sudo apt-get -y -qq update
            sudo apt-get install -y awscli
            sudo apt-get install -y python-pip python-dev build-essential
        - run:
            name: Build Project
            command: |
              npm install
              npm run build
              cd build
              zip ../build.zip -r * .[^.]*
              echo "Build completed successfully!"
        - run:
            name: Deploy to S3
            command: |
              if [ "${CURRENT_BRANCH}" == "main" ]
              then
                aws --region ${AWS_REGION} s3 sync ~/project/build s3:/${AWS_PRODUCTION_BUCKET} --delete
              elif [ "${CURRENT_BRANCH}" == "staging" ]
              then
                aws --region ${AWS_REGION} s3 sync ~/project/build s3:/${AWS_STAGING_BUCKET} --delete
              else
                aws --region ${AWS_REGION} s3 sync ~/project/build s3:/${AWS_DEV_BUCKET} --delete
              fi

  deploy_to_cloudfront:
    docker:
      - image: circleci/node:16.5
    working_directory: ~/project
    steps:
      - checkout
      - run:
          name: Show current branch
          command: echo ${CURRENT_BRANCH}
      - run:
          name: Install AWS CLI
          working_directory: /
          command: |
            sudo apt-get -y -qq update
            sudo apt-get install -y awscli
            sudo apt-get install -y python-pip python-dev build-essential
        - run:
            name: Build Project
            command: |
              npm install
              npm run build
              cd build
              zip ../build.zip -r * .[^.]*
              echo "Build completed successfully!"
        - run:
            name: Deploy to CloudFront
            command: |
              aws configure set preview.cloudfront
              if [ "${CURRENT_BRANCH}" == "main" ]
              then
                aws cloudfront create-invalidation --distribution-id ${PRODUCTION_DISTRIBUTION_ID} --paths /\*
              elif [ "${CURRENT_BRANCH}" == "staging" ]
              then
                aws cloudfront create-invalidation --distribution-id ${STAGING_DISTRIBUTION_ID} --paths /\*
              else
                aws cloudfront create-invalidation --distribution-id ${DEV_DISTRIBUTION_ID} --paths /\*
              fi

workflows:
  build_and_deploy:
    jobs:
      - install_dependencies
      - deploy_to_aws_s3:
          requires:
            - build
          filters:
            branches:
              only:
                - develop
                - staging
                - main
      - deploy_to_cloudfront:
          requires:
            - deploy-to-aws-s3
          filters:
            branches:
              only:
                - develop
                - staging
                - main
# orbs:   
#   node: circleci/node@1.1.6
# jobs:
#   build-and-test:
#     executor:
#       name: node/default
#     steps:
#       - checkout
#       - node/with-cache:
#           steps:
#             - run: npm install
#             - run: npm test
# workflows:
#   build-and-test:
#     jobs:
#       - build-and-test